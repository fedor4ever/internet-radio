EXPORTS
	?isWlanSupported@IRQNetworkController@@QBE_NXZ @ 1  NONAME ; bool IRQNetworkController::isWlanSupported(void) const
	?getIAPId@IRQNetworkController@@QBE?AW4IRQError@@AAK@Z @ 2  NONAME ; enum IRQError IRQNetworkController::getIAPId(unsigned long &) const
	?cancelConnecting@IRQNetworkController@@QAEXXZ @ 3  NONAME ; void IRQNetworkController::cancelConnecting(void)
	?isHandlingOverConnection@IRQNetworkController@@QAE_NXZ @ 4  NONAME ; bool IRQNetworkController::isHandlingOverConnection(void)
	?identifyConnectionType@IRQNetworkController@@QBE?AW4IRQConnectionType@@XZ @ 5  NONAME ; enum IRQConnectionType IRQNetworkController::identifyConnectionType(void) const
	?openInstance@IRQNetworkController@@SAPAV1@XZ @ 6  NONAME ; class IRQNetworkController * IRQNetworkController::openInstance(void)
	?closeInstance@IRQNetworkController@@QAEXXZ @ 7  NONAME ; void IRQNetworkController::closeInstance(void)
	?notifyActiveNetworkObservers@IRQNetworkController@@QAEXW4IRQNetworkEvent@@@Z @ 8  NONAME ; void IRQNetworkController::notifyActiveNetworkObservers(enum IRQNetworkEvent)
	?getNetworkStatus@IRQNetworkController@@QBE_NXZ @ 9  NONAME ; bool IRQNetworkController::getNetworkStatus(void) const
	?resetConnectionStatus@IRQNetworkController@@QAEXXZ @ 10  NONAME ; void IRQNetworkController::resetConnectionStatus(void)
	?isOfflineMode@IRQNetworkController@@QAE_NXZ @ 11  NONAME ; bool IRQNetworkController::isOfflineMode(void)
	?isConnectRequestIssued@IRQNetworkController@@QBE_NXZ @ 12  NONAME ; bool IRQNetworkController::isConnectRequestIssued(void) const
	?chooseAccessPoint@IRQNetworkController@@QAEXXZ @ 13  NONAME ; void IRQNetworkController::chooseAccessPoint(void)

